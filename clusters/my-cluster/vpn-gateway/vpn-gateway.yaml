---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vpn-gateway
  labels:
  namespace: vpn-gateway
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: pod-gateway
      version: 5.6.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m

  ## See https://github.com/k8s-at-home/charts/blob/master/charts/pod-gateway/values.yaml
  values:
    image:
      repository: ghcr.io/k8s-at-home/pod-gateway
      tag: v1.7.0
    routed_namespaces:
    - media
    addons:
      vpn:
        enabled: true
        # You might use `openvpn` or `wireguard`
        type: openvpn
        openvpn:
          authSecret: vpn-auth
        # VPN settings stored in secret `vpnConfig`. The secret mus have a key
        # a key called `vpnConfigfile` with the openvpn/wireguard config files in them
        configFileSecret: openvpn
        
        livenessProbe:
          exec:
            # In the example bellow the VPN output is in Belgic (BE) - change appropiatly
            command:
              - sh
              - -c
              - wget -q -O- https://ipinfo.io/country>>/var/log/healthcheck
          initialDelaySeconds: 30
          periodSeconds: 60
          failureThreshold: 1
          timeoutSeconds: 3
        networkPolicy:
          enabled: true
          egress:
            - to:
              - ipBlock:
                  cidr: 0.0.0.0/0
              ports:
              # VPN traffic port - change if your provider uses a different port
              - port: 443
                protocol: UDP
            - to:
                # Allow traffic within K8S - change if your K8S cluster uses a different CIDR
              - ipBlock:
                  cidr: 10.42.0.0/16
              - ipBlock:
                  cidr: 10.43.0.0/16
    settings:
      # tun0 for openvpn, wg0 for wireguard
      VPN_INTERFACE: tun0
      # Prevent non VPN traffic to leave the gateway
      VPN_BLOCK_OTHER_TRAFFIC: true
      # If VPN_BLOCK_OTHER_TRAFFIC is true, allow VPN traffic over this port
      VPN_TRAFFIC_PORT: 443
      # Traffic to these IPs will be send through the K8S gateway
      # change if your K8S cluster or home network uses a different CIDR
      VPN_LOCAL_CIDRS: "10.42.0.0/16 10.43.0.0/16 192.168.0.0/16"
      NOT_ROUTED_TO_GATEWAY_CIDRS: "10.42.0.0/16 10.43.0.0/16 192.168.0.0/16"
    webhook:
      image:
        repository: ghcr.io/k8s-at-home/gateway-admision-controller
        tag: v3.6.0
      namespaceSelector:
        label: "vpn-routed-gateway"
